<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:viewModel="clr-namespace:VSSonarExtensionUi.ViewModel"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns:analysis="clr-namespace:VSSonarExtensionUi.ViewModel.Analysis"
	xmlns:analysisView="clr-namespace:VSSonarExtensionUi.View.Analysis"
	mc:Ignorable="d"
	x:Class="VSSonarExtensionUi.View.SonarQubeUserControlVs"
	x:Name="UserControl"
	d:DesignWidth="640" d:DesignHeight="480">

    <UserControl.Resources>
        <ResourceDictionary>

                       
            <ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/VSSonarExtensionUi;component/Styles/Styles.xaml" />

				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

				<ResourceDictionary Source="pack://application:,,,/VSSonarExtensionUi;component/Resources/Icons.xaml" />
                <ResourceDictionary Source="/VSSonarExtensionUi;component/Styles/ButtonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
                                   
            <DataTemplate DataType="{x:Type analysis:ServerViewModel}">
                <analysisView:ServerView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type analysis:LocalViewModel}">
                <analysisView:LocalView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type analysis:IssuesSearchViewModel}">
                <analysisView:IssueSearchView/>
            </DataTemplate>

        	<DataTemplate x:Key="ProjectSelectionComboBoxDataTemplate">
        		<StackPanel>
                    <TextBlock Text="{Binding Name}"></TextBlock>
                </StackPanel>
        	</DataTemplate>
            
        </ResourceDictionary>
    </UserControl.Resources>
            
    <UserControl.Background>
   <SolidColorBrush Color="{Binding BackGroundColor}"/>
</UserControl.Background>

    <UserControl.Foreground>
   <SolidColorBrush Color="{Binding ForeGroundColor}"/>
</UserControl.Foreground>    
        
	<Grid x:Name="LayoutRoot">
		<Grid.RowDefinitions>
			<RowDefinition Height="40"/>
			<RowDefinition Height="418*"/>
			<RowDefinition Height="32"/>
            <RowDefinition Height="5" />
		</Grid.RowDefinitions>
		<Menu x:Name="MainMenuIssues" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}">
			<MenuItem Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" x:Name="ToolsMenu" Header="Menu" Width="auto" HorizontalAlignment="Center" VerticalAlignment="Center" >
				<MenuItem Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" x:Name="OptionsMenu" Header="Properties" Command="{Binding LaunchExtensionPropertiesCommand}"/>
			</MenuItem>
            <MenuItem x:Name="PluginsMenu" Header="Tools" ItemsSource="{Binding ToolsProvidedByPlugins}" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Foreground" Value="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}"/>
                        <Setter Property="Background" Value="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}"/>
                        <Setter Property="Command" Value="{Binding ToolSwitchCommand}"  />
                        <Setter Property="IsEnabled" Value="{Binding IsAssociated}"  />
                        <Setter Property="CommandParameter" Value="{Binding Header, RelativeSource={RelativeSource Self}}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <ComboBox Width="200"
                      Style="{DynamicResource VirtualisedMetroComboBox}"
                      TextSearch.TextPath="Name"
                      controls:TextBoxHelper.Watermark="Project"
                      IsEditable="True"
                      SelectedItem="{Binding SelectedProject, Mode=TwoWay}"
                      ItemsSource="{Binding AvailableProjects}"                   
                      MaxDropDownHeight="125"
                      ItemTemplate="{DynamicResource ProjectSelectionComboBoxDataTemplate}"
                      />            
			<Button Style="{StaticResource MyMetroButton}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Content="Associate" Command="{Binding AssignProjectCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" />
		</Menu>
       
		<StatusBar Grid.Row="2" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}">		
			<StatusBarItem HorizontalAlignment="Left">
				<TextBlock Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Text="{Binding ErrorMessage, FallbackValue=Connected}" ToolTip="{Binding DiagnosticMessage}"></TextBlock>
				</StatusBarItem>
			<StatusBarItem HorizontalAlignment="Left">
				<TextBlock Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Text="{Binding DiagnosticsFound, FallbackValue=Found24}" ></TextBlock>
				</StatusBarItem>            
			<StatusBarItem HorizontalAlignment="Right">
				<StackPanel Orientation="Horizontal">
                    
                    <StatusBarItem>                                              
                        <ToggleButton Width="30"
                                      Height="30"
                                      Margin="0, -6, 0, 0"
                                      Style="{DynamicResource MetroCircleToggleButtonStyle}"  Command="{Binding ConnectCommand}" IsChecked="{Binding IsConnected}" IsEnabled="{Binding CanConnectEnabled}">
							            <ToggleButton.ContextMenu>
								            <ContextMenu>
									            <MenuItem Header="Connect" Command="{Binding ConnectedToServerCommand}" IsEnabled="{Binding IsConnected, Converter={StaticResource BooleanInverter}}"/>
									            <MenuItem Header="Disconnect" Command="{Binding DisconnectToServerCommand}" IsEnabled="{Binding IsConnected}"/>
								            </ContextMenu>
							            </ToggleButton.ContextMenu>                  
                        <Rectangle Width="15"
                                   Height="15"
                                   Fill="{Binding  ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill"
                                             Visual="{StaticResource appbar_connect}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </ToggleButton>
                        
					</StatusBarItem>
				</StackPanel>
			</StatusBarItem>
		</StatusBar>
        <controls:MetroProgressBar Grid.Row="3" IsIndeterminate="{Binding IsExtensionBusy}"
                                       Value="{Binding ElementName=horizSlider, Path=Value}"
                                       ToolTip="{Binding BusyToolTip}"
                                       Foreground="{DynamicResource AccentColorBrush}"/>

        <TabControl controls:TabControlHelper.IsUnderlined="True" Grid.Row="1"  x:Name="TabControlViews" ItemsSource="{Binding SonarQubeViews}" SelectedItem="{Binding SelectedView}" TabStripPlacement="Bottom" >
            <TabControl.Resources>
                    <Style TargetType="TabItem" BasedOn="{StaticResource MetroTabItem}">
                        <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="12" />
                    <Setter Property="controls:TabControlHelper.IsUnderlined" Value="True" />
                    </Style>
            </TabControl.Resources>
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Header}"/>
                </DataTemplate>
            </TabControl.ItemTemplate>
			
			<TabControl.ContentTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding ElementName=TabControlViews, Path=SelectedItem}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}"/>
                </DataTemplate>
            </TabControl.ContentTemplate>
		</TabControl>
	</Grid>
</UserControl>